<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserInfoDAO">
	<select id="emailCheck" parameterType="userInfo"
		resultType="userInfo">
		SELECT * FROM USERINFO WHERE USER_EMAIL = #{user_email} AND USER_OUTDATE IS NULL
	</select>

	<insert id="insertUserInfo" parameterType="userInfo">
      INSERT INTO USERINFO(USER_NO, USER_NAME, USER_PHONE, USER_EMAIL,
      USER_PASSWORD, USER_INTYPE, USER_INDATE,USER_RATING)
      VALUES (USERINFO_USER_NO_SEQ.nextval, #{user_name}, #{user_phone},
      #{user_email}, #{user_password}, #{user_intype}, SYSDATE,'시민')
    </insert>
	
	<select id="emailLogin" parameterType="userInfo"
		resultType="userInfo">
		SELECT * FROM USERINFO 
		WHERE USER_EMAIL = #{user_email} 
		AND USER_PASSWORD = #{user_password}
		AND USER_INTYPE = 'EMAIL'
		AND USER_OUTDATE IS NULL
	</select>
	<!-- end date 즉 회원 탈퇴,정지된 회원을 제외한 회읜의 리스트 -->
	<select id="getUserList" resultType="userInfo">
		select *
		from userinfo
		where user_outdate is null
		order by user_no desc
	</select>
	<!-- end date 즉 회원 탈퇴,정지된 회원을 제외한 회읜의 리스트 에서 페이징을 추가한 기능-->
	<select id="getAdUserList" parameterType="page" resultType="userInfo">
		select *
		from userinfo
		where user_no in(select user_no from
			(select user_no,rownum AS rnum from
				(select user_no 
				from userinfo 
				<where>
		  			<if test="stext != null">
		  				${select} like '%${stext}%'
		  			</if>
  				</where>
				order by user_no desc))
			where 
				<![CDATA[rnum >= #{firstRow}]]> and 
				<![CDATA[rnum <= #{endRow})]]>
		order by user_no desc
	</select>
	<!-- 페이징을위한 그룹번호(즉, 게시글의 총갯수)를 불러오는 조회문 -->
	<select id="getAllcnt" parameterType="page" resultType="page">
		select count(user_no) as totalRecCount 
		from userinfo
		<where>
  			<if test="stext != null">
  				${select} like '%${stext}%'
  			</if>
		</where>
	</select>
	<!-- 회원의 상세정보 조회 -->
	<select id="getUserInfo" parameterType="userInfo"
		resultType="userInfo">
		select *
		from userinfo
		where user_no = #{user_no} AND USER_OUTDATE IS NULL
	</select>
	<!-- 모든회원의 상세정보 조회 -->
	<select id="getAdUserInfo" parameterType="userInfo" resultType="userInfo">
		select *
		from userinfo
		where user_no = #{user_no}
	</select>
	<!-- 회원 탈퇴, 사용정지시 outdate 업데이트 -->
	<update id="updateOutDate" parameterType="userInfo">
		update userinfo
		set
		user_outdate = sysdate
		where user_no = #{user_no}
	</update>
	<update id="updateUser" parameterType="userInfo">
		update userinfo
		set	user_phone = #{user_phone},user_addr=#{user_addr},user_rating=#{user_rating}
		where user_no = #{user_no}
	</update>
	<!-- 탈퇴하지 않은 회원들의 no,rating 검색 -->
	<select id="getUserNo" resultType="userInfo">
		select user_no,user_rating
		from userinfo
		where user_outdate is null
	</select>
	<!-- 유저 등급 조정 -->
	<update id="changeRating" parameterType="userInfo">
		update userinfo
		set user_rating = #{user_rating}
		where user_no = #{user_no}
	</update>
</mapper>
  
  